version: 2
jobs:
    build:
        working_directory: /stylize
        docker:
            - image: archlinux
        environment:
            GOPATH: /go
            CIRCLE_ARTIFACTS: /tmp/artifacts
        steps:
            - run: echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
            - run: mkdir -p $CIRCLE_ARTIFACTS

            # install deps
            - run: pacman -Sy --noconfirm clang python-pip go git npm rust
            - run: go version
            - run: pip install yapf
            - run: npm install -g prettier
            - run: |
                go install github.com/bazelbuild/buildtools/buildifier@latest && \
                go install github.com/justbuchanan/ci-status@latest && \
                go install golang.org/x/tools/cmd/cover@latest && \
                go install github.com/mattn/goveralls@latest

            - checkout

            # setup git
            - run: |
                git config --global user.email "ci@circle"
                git config --global user.name "Circle Ci"

            - run: ci-status --context build --description "go build" "go build"

            - run: ci-status --context checkstyle --description "run stylize" "./stylize --patch_output /tmp/artifacts/pretty.patch" || true

            - run: ci-status --context tests --description "go test" "go test -v -covermode=count -coverprofile=coverage.out"
            - run: ci-status -h --context coverage_upload --description "upload coverage with goveralls" "goveralls -coverprofile=coverage.out -service=circle-ci -repotoken $COVERALLS_REPO_TOKEN"

            - run: ci-status --context vet --description "go vet" "go vet"

            - store_artifacts:
                path: /tmp/artifacts

workflows:
  version: 2
  all:
    jobs:
      - build
